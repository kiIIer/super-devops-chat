version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chatdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: grpc_server
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: chatdb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      SAVE_EXCHANGE: SaveMessageExchange
      NEW_MESSAGE_EXCHANGE: NewMessageExchange
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "50051:50051"

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: message_worker
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: chatdb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      SAVE_EXCHANGE: SaveMessageExchange
      NEW_MESSAGE_EXCHANGE: NewMessageExchange
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
